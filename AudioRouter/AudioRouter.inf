;
; AudioRouter.inf
;

[Version]
Signature = "$WINDOWS NT$"
Class = MEDIA
ClassGuid = {4d36e96c-e325-11ce-bfc1-08002be10318} ; must match the Class above
Provider = %ManufacturerName%
CatalogFile = AudioRouter.cat
DriverVer = ; generated by stampinf
PnpLockDown = 1

[SourceDisksNames]
1 = %DiskName% ; defines a disk named '1' with a user-friendly label

[SourceDisksFiles]
AudioRouter.sys = 1 ; what disk number from [SourceDisksNames] can the file be found on

[DestinationDirs]
DefaultDestDir = 12 ; Windows\System32\Drivers. Must match [AudioRouter_Service_Inst]/ServiceBinary

[Manufacturer]
%ManufacturerName% = Standard,NT$ARCH$ ; defines a manufacturer with name %ManufacturerName% and corresponding Models section [Standard.NT$ARCH$]

; NOTE: OS/architecture specifier ".NT$ARCH$" just inserts the current development target and is
;       thus mostly useless, but some windows(server) versions require it => just put it everywhere

[Standard.NT$ARCH$] ; Models section (with architecture-specific suffix)
%DeviceDescription% = AudioRouter_Device, Root\AudioRouter ; defines a device with name %DeviceDescription% and corresponding DDInstall section [AudioRouter_Device] and hw-id Root\AudioRouter

[AudioRouter_Device.NT$ARCH$] ; DDInstall section
CopyFiles = Drivers_Dir ; defines a section [Drivers_Dir] that contains a list of files to copy
; Include = ks.inf, wdmaudio.inf ; include system-provided inf files
; Needs = KS.Registration, WDMAUDIO.Registration ; include specific sections from the above inf files

[Drivers_Dir] ; section containing a list of files to copy
AudioRouter.sys

[AudioRouter_Device.NT$ARCH$.Services]
AddService = AudioRouter, 0x2, Service_Install ; defines a service.
; Parameters: AudioRouter = name of the service (must be system-unique)
;             0x2 = flags. 0x2 means set service as default for this driver
;             Service_Install = name of the section that contains the service's install parameters

[Service_Install]
DisplayName = %ServiceName%
Description = %ServiceDescription%
ServiceType = 1 ; SERVICE_KERNEL_DRIVER
StartType = 3 ; SERVICE_DEMAND_START
ErrorControl = 1 ; SERVICE_ERROR_NORMAL
ServiceBinary = %12%\AudioRouter.sys ; path to binary, number must match [DestinationDirs]/DefaultDestDir

[AudioRouter_Device.NT$ARCH$.Interfaces]
AddInterface=%KSCATEGORY_AUDIO%, %KSNAME_WaveSpeaker%, AudioRouter.Interface.WaveSpeaker
AddInterface=%KSCATEGORY_RENDER%, %KSNAME_WaveSpeaker%, AudioRouter.Interface.WaveSpeaker
AddInterface=%KSCATEGORY_REALTIME%, %KSNAME_WaveSpeaker%, AudioRouter.Interface.WaveSpeaker

[AudioRouter.Interface.WaveSpeaker]
AddReg = AudioRouter.Interface.WaveSpeaker.AddReg

[AudioRouter.Interface.WaveSpeaker.AddReg] ; TODO: see if this is needed
HKR,,CLSID,,%Proxy.CLSID%
HKR,,FriendlyName,,%AudioRouter.WaveSpeaker.szPname%


[Strings]
; configurable
ManufacturerName = "mich101mich"
DiskName = "AudioRouter Installation Disk"
DeviceDescription = "AudioRouter Device"
ServiceName = "AudioRouter Service"
ServiceDescription = "Provides Audio interfaces with internal routing capabilities"
AudioRouter.WaveSpeaker.szPname = "AudioRouter WaveSpeaker"

; must match code
KSNAME_WaveSpeaker = "WaveSpeaker"

; external constants
Proxy.CLSID="{17CCA71B-ECD7-11D0-B908-00A0C9223196}"
KSCATEGORY_AUDIO="{6994AD04-93EF-11D0-A3CC-00A0C9223196}"
KSCATEGORY_RENDER="{65E8773E-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_CAPTURE="{65E8773D-8F56-11D0-A3B9-00A0C9223196}"
KSCATEGORY_REALTIME ="{EB115FFC-10C8-4964-831D-6DCB02E6F23F}"
